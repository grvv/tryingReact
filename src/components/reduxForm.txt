1. import { reducer as formReducer } from 'redux-form';

2. create a reducer in combine reducers { from : formReducers } --> key name must be form;

3. import {Field, reduxForm} from 'redux-form';
Field is a component and reduxForm is a helper method

4. connecting redux form to component;
    similar sintax to connect --> reduxForm({CONFIGRATION_OBJECT})(component)
    configration object field name --> form: FORM_NAME

    console.log(this.props) --> for all the props in the component

    The Field component is how you connect each individual input to the Redux store
    https://redux-form.com/8.1.0/docs/api/field.md/

    The Field component is how you connect each individual input to the Redux store. There are three fundamental things that you need to understand in order to use Field correctly:

    The name prop is required. It is a string path, in dot-and-bracket notation, corresponding to a value in the form values. It may be as simple as 'firstName' or as complicated as 'contact.billing.address[2].phones[1].areaCode'.

    The component prop is required. It may be a Component, a stateless function, or a string name of one of the default supported DOM inputs (input, textarea or select) (see the Usage section below). To learn about the props that will be provided to whatever your component is, see the Props section below.

    All other props will be passed along to the element generated by the component prop.

5. The Component that's passed in Field Component recieves formProps;

6. pass validate function in CONFIGRATION_OBJECT --> validate method will recieves form value we cal validate;

7. use meta for field validation;